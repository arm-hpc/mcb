
BEGIN_EXCLUDE_LIST
MPI_Comm_rank()#
barrier enter/exit#
unsigned long long IMC_namespace::rng_tools::hash_state(unsigned long long)#
void IMC_namespace::break_up_ull(unsigned long long, unsigned int &, unsigned int &)#
void IMC_namespace::pseudo_des(unsigned int &, unsigned int &)#
unsigned long long IMC_namespace::reconstruct_ull(unsigned int, unsigned int)#
IMC_namespace::Domain_exchange<Mesh_type, Particle_type>::mSharedBufferedParticleVector#
IMC_namespace::IMC<mesh_types, mat_types>::mSharedPhotonList#
IMC_namespace::isotropic_source<mesh_types, mat_types>::element_energy_emitted#
IMC_namespace::isotropic_source<mesh_types, mat_types>::sourceIntegral#
IMC_namespace::isotropic_source<mesh_types, mat_types>::loadBalancedSourceIntegral#
IMC_namespace::isotropic_source<mesh_types, mat_types>::zone#
IMC_namespace::Source_data_base<mesh_types, mat_types>::next_state#
IMC_namespace::Source_data_base<mesh_types, mat_types>::add_photon_statistically#
IMC_namespace::isotropic_source<mesh_types, mat_types>::generate_source_photon#
void IMC_namespace::Ortho_Cartesian_2D_Mesh::randomZoneLocation(IMC_namespace::rng &, IMC_namespace::Ortho_Cartesian_2D_Mesh::mesh_zone_ID_type, Vector3d_namespace::Vector3d &, IMC_namespace::Ortho_Cartesian_2D_Mesh::particle_zone_ID_type &) const#
void IMC_namespace::Ortho_Cartesian_2D_Mesh::randomZoneLocation(double, double, double, unsigned int, Vector3d_namespace::Vector3d &) const#
IMC_namespace::Source_data_base<mesh_types, mat_types>::add_photons_to_source_list#
std::vector<unsigned long long, std::allocator<unsigned long long>> &IMC_namespace::Nonblocking_Gather::mULLThreadedData()#
std::vector<size_t, std::allocator<size_t>> &IMC_namespace::Nonblocking_Gather::mSizeTThreadedData()#
double IMC_namespace::Ortho_Cartesian_2D_Mesh::d_min(const Vector3d_namespace::Vector3d &, unsigned int) const#
IMC_namespace::IMC<mesh_types, mat_types>::setOpacities#
IMC_namespace::Analytic_opacity_data_base<mesh_types, mat_types>::absorption_opacity#
double IMC_namespace::constant_absorp_opac::absorption_opacity() const#
IMC_namespace::Analytic_opacity_data_base<mesh_types, mat_types>::scattering_opacity#
double IMC_namespace::isotropic_scattering::scattering_opacity() const#
IMC_namespace::IMC<mesh_types, mat_types>::distanceToCollision#
double IMC_namespace::mfpsToCollision(double)#
double IMC_namespace::Ortho_Cartesian_2D_Mesh::distanceToBoundary(const Vector3d_namespace::Vector3d &, const Vector3d_namespace::Vector3d &, unsigned int, unsigned int &, unsigned int &, bool &, bool &) const#
IMC_namespace::IMC<mesh_types, mat_types>::advanceBoundary#
IMC_namespace::IMC_4Momentum<mesh_types, mat_types>::tallyRadiationEnergy#
IMC_namespace::IMC_4Momentum<mesh_types, mat_types>::attenuate#
IMC_namespace::IMC_4Momentum<mesh_types, mat_types>::Russian_Roulette#
IMC_namespace::transmitting_BC<Mesh_type, Particle_type>::impose_BC#
IMC_namespace::IMC<mesh_types, mat_types>::advanceCollision#
IMC_namespace::IMC<mesh_types, mat_types>::processCollision#
IMC_namespace::Analytic_opacity_data_base<mesh_types, mat_types>::physical_scattering#
void IMC_namespace::isotropic_scattering::scattering_results(IMC_namespace::rng &, double &) const#
IMC_namespace::rotate_angles#
IMC_namespace::IMC<mesh_types, mat_types>::advanceCensus#
IMC_namespace::reflecting_BC<Mesh_type, Particle_type>::impose_BC#
Vector3d_namespace::Vector3d IMC_namespace::Ortho_Cartesian_2D_Mesh::face_normal(unsigned int, const Vector3d_namespace::Vector3d &) const#
IMC_namespace::Ortho_Cartesian_2D_Mesh::orientation IMC_namespace::Ortho_Cartesian_2D_Mesh::face_orientation(unsigned int) const#
IMC_namespace::Domain_BC<Mesh_type, Particle_type>::impose_BC#
IMC_namespace::Domain_exchange<Mesh_type, Particle_type>::buffer_particle#
void IMC_namespace::Ortho_Cartesian_2D_Mesh::setNewDomainZoneInfo(const IMC_namespace::Ortho_Cartesian_2D_Mesh::particle_zone_ID_type &, const IMC_namespace::Ortho_Cartesian_2D_Mesh::particle_zone_ID_type &, const IMC_namespace::Ortho_Cartesian_2D_Mesh::particle_face_ID_type &, Vector3d_namespace::Vector3d &, IMC_namespace::Ortho_Cartesian_2D_Mesh::newDomainZoneIDType &) const#
IMC_namespace::Domain_exchange<Mesh_type, Particle_type>::send_particles#
void IMC_namespace::Nonblocking_Gather::accumulate_local(unsigned long long *)#
atomic enter/exit#
atomic#
barrier#
void IMC_namespace::Nonblocking_Gather::reset_shared_buffer()#
IMC_namespace::IMC_4Momentum<mesh_types, mat_types>::calculate_zonal_census_info#
master begin/end#
bool &IMC_namespace::Nonblocking_Sync::mDoneYet()#
IMC_namespace::photon<particle_zone_ID_type, Vector3d>::consistent#
IMC_namespace::Source_data_base<mesh_types, mat_types>::get_external_source_photons#
IMC_namespace::Domain_photon_source<mesh_types, mat_types>::add_source_photons#
void IMC_namespace::Ortho_Cartesian_2D_Mesh::correctNewDomainZone(const IMC_namespace::Ortho_Cartesian_2D_Mesh::newDomainZoneIDType &, Vector3d_namespace::Vector3d &, IMC_namespace::Ortho_Cartesian_2D_Mesh::particle_zone_ID_type &) const#
bool IMC_namespace::Nonblocking_Sync::finished()#
master#
MPI_Test()#
void IMC_namespace::Nonblocking_Gather::accumulate_and_send(unsigned long long *)#
void IMC_namespace::Nonblocking_Gather::accumulate(unsigned long long *)#
MPI_Testsome()#
IMC_namespace::Source_data_base<mesh_types, mat_types>::get_photons_from_element#
IMC_namespace::IMC<mesh_types, mat_types>::advancePhoton#
IMC_namespace::stand_alone_mesh_types<IMC_namespace::Ortho_Cartesian_2D_Mesh>::Vector3d IMC_namespace::rotate_angles(double, double, const IMC_namespace::stand_alone_mesh_types<IMC_namespace::Ortho_Cartesian_2D_Mesh>::Vector3d &)#
double IMC_namespace::MCAnswer::Answer(double, double, double)#
double IMC_namespace::MCAnswer::loadBalancedAnswer(double)#
double IMC_namespace::MCAnswer::loadBalancedTemporalIntegral(double) const#
END_EXCLUDE_LIST
