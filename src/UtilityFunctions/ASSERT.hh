//----------------------------------*-C++-*----------------------------------//
// Copyright 2009 Lawrence Livermore National Security, LLC
// All rights reserved.
//---------------------------------------------------------------------------//

// This work performed under the auspices of the U.S. Department of Energy by
// Lawrence Livermore National Laboratory under Contract DE-AC52-07NA27344

//  DISCLAIMER
//  This work was prepared as an account of work sponsored by an agency of the
//  United States Government. Neither the United States Government nor the
//  Lawrence Livermore National Security, LLC, nor any of their employees,
//  makes any warranty, express or implied, including the warranties of
//  merchantability and fitness for a particular purpose, or assumes any
//  legal liability or responsibility for the accuracy, completeness, or
//  usefulness of any information, apparatus, product, or process disclosed,
//  or represents that its use would not infringe privately owned rights.

//---------------------------------------------------------------------------//
// @> Header file for Assert macro.
//---------------------------------------------------------------------------//

#ifndef __ASSERT_hh__
#define __ASSERT_hh__

#include <iostream>
#include <cstdlib>
#include <sstream>

//---------------------------------------------------------------------------//

//    make these DBC functions all ASSERT
#ifndef ENSURE
#define ENSURE ASSERT
#endif

#ifndef REQUIRE
#define REQUIRE ASSERT
#endif

#ifndef VERIFY 
#define VERIFY ASSERT
#endif

//    if ASSERT isn't defined, make one
#ifndef ASSERT

//    run expensive assertions by making them ASSERT
#define EXPENSIVE_ASSERT ASSERT

#define ASSERT(a) if (!(a)) \
    { std::cerr << "Assertion " << #a << " failed in " << __FILE__ \
       << " at line " << __LINE__ << std::endl << std::flush; \
throw( "Assertion " #a " failed in " __FILE__ ); }

#endif    //    #ifndef ASSERT

#ifndef REQUIRE

#define REQUIRE(a) if (!(a)) { \
      std::ostringstream s; \
      s << "Precondition violated" << ": " << #a << std::endl; \
      s << "...at line " << __LINE__ << \
         " of file " << __FILE__ << "." << std::ends; \
      abort(); }
#endif    //    #ifndef REQUIRE

//---------------------------------------------------------------------------//

//    to get rid of warning messages about unused variables that are
//    generated by variables that only get used in assertions

#ifndef CONTRACT_VAR
#define CONTRACT_VAR(x) if (0 && &x == 0);
#endif    //    #ifndef CONTRACT_VAR

//---------------------------------------------------------------------------//

//    if you don't want assertions
#ifdef NOASSERT

#undef ASSERT
#define ASSERT(a) 

#endif

//---------------------------------------------------------------------------//
//                              end of ASSERT.hh
//---------------------------------------------------------------------------//

#endif    //    ASSERT.hh


