//----------------------------------*-C++-*----------------------------------//
// Copyright 2009 Lawrence Livermore National Security, LLC
// All rights reserved.
//---------------------------------------------------------------------------//

// This work performed under the auspices of the U.S. Department of Energy by
// Lawrence Livermore National Laboratory under Contract DE-AC52-07NA27344

//  DISCLAIMER
//  This work was prepared as an account of work sponsored by an agency of the
//  United States Government. Neither the United States Government nor the
//  Lawrence Livermore National Security, LLC, nor any of their employees,
//  makes any warranty, express or implied, including the warranties of
//  merchantability and fitness for a particular purpose, or assumes any
//  legal liability or responsibility for the accuracy, completeness, or
//  usefulness of any information, apparatus, product, or process disclosed,
//  or represents that its use would not infringe privately owned rights.

#include <cmath>

#include "mfpsToCollision.hh"
#include "ASSERT.hh"

namespace IMC_namespace
{

static const unsigned int LN_XS_SIZE = 128;

static const double LN_XS_ARRAY[LN_XS_SIZE] =
{
   -1.20000e+01, -4.85203e+00, -4.15888e+00, -3.75342e+00, -3.46574e+00, -3.24259e+00,
   -3.06027e+00, -2.90612e+00, -2.77259e+00, -2.65481e+00, -2.54945e+00, -2.45413e+00,
   -2.36712e+00, -2.28708e+00, -2.21297e+00, -2.14398e+00, -2.07944e+00, -2.01882e+00,
   -1.96166e+00, -1.90759e+00, -1.85630e+00, -1.80751e+00, -1.76099e+00, -1.71654e+00,
   -1.67398e+00, -1.63315e+00, -1.59393e+00, -1.55619e+00, -1.51983e+00, -1.48473e+00,
   -1.45083e+00, -1.41804e+00, -1.38629e+00, -1.35552e+00, -1.32567e+00, -1.29668e+00,
   -1.26851e+00, -1.24111e+00, -1.21444e+00, -1.18847e+00, -1.16315e+00, -1.13846e+00,
   -1.11436e+00, -1.09083e+00, -1.06784e+00, -1.04537e+00, -1.02339e+00, -1.00188e+00,
   -9.80829e-01, -9.60210e-01, -9.40007e-01, -9.20205e-01, -9.00787e-01, -8.81738e-01,
   -8.63046e-01, -8.44697e-01, -8.26679e-01, -8.08979e-01, -7.91587e-01, -7.74493e-01,
   -7.57686e-01, -7.41156e-01, -7.24896e-01, -7.08896e-01, -6.93147e-01, -6.77643e-01,
   -6.62376e-01, -6.47338e-01, -6.32523e-01, -6.17924e-01, -6.03535e-01, -5.89350e-01,
   -5.75364e-01, -5.61571e-01, -5.47965e-01, -5.34542e-01, -5.21297e-01, -5.08225e-01,
   -4.95321e-01, -4.82582e-01, -4.70004e-01, -4.57581e-01, -4.45311e-01, -4.33190e-01,
   -4.21213e-01, -4.09379e-01, -3.97683e-01, -3.86122e-01, -3.74693e-01, -3.63394e-01,
   -3.52221e-01, -3.41171e-01, -3.30242e-01, -3.19431e-01, -3.08735e-01, -2.98153e-01,
   -2.87682e-01, -2.77319e-01, -2.67063e-01, -2.56910e-01, -2.46860e-01, -2.36910e-01,
   -2.27057e-01, -2.17301e-01, -2.07639e-01, -1.98070e-01, -1.88591e-01, -1.79201e-01,
   -1.69899e-01, -1.60682e-01, -1.51550e-01, -1.42500e-01, -1.33531e-01, -1.24642e-01,
   -1.15832e-01, -1.07098e-01, -9.84401e-02, -8.98563e-02, -8.13456e-02, -7.29068e-02,
   -6.45385e-02, -5.62397e-02, -4.80092e-02, -3.98459e-02, -3.17487e-02, -2.37165e-02,
   -1.57484e-02, -7.84318e-03
};

static const double D_LN_XS_ARRAY[LN_XS_SIZE] =
{
    7.14797e+00,  6.93147e-01,  4.05465e-01,  2.87682e-01,  2.23144e-01,  1.82322e-01,
    1.54151e-01,  1.33531e-01,  1.17783e-01,  1.05361e-01,  9.53102e-02,  8.70114e-02,
    8.00427e-02,  7.41080e-02,  6.89929e-02,  6.45385e-02,  6.06246e-02,  5.71584e-02,
    5.40672e-02,  5.12933e-02,  4.87902e-02,  4.65200e-02,  4.44518e-02,  4.25596e-02,
    4.08220e-02,  3.92207e-02,  3.77403e-02,  3.63676e-02,  3.50913e-02,  3.39016e-02,
    3.27898e-02,  3.17487e-02,  3.07717e-02,  2.98530e-02,  2.89875e-02,  2.81709e-02,
    2.73990e-02,  2.66682e-02,  2.59755e-02,  2.53178e-02,  2.46926e-02,  2.40976e-02,
    2.35305e-02,  2.29895e-02,  2.24729e-02,  2.19789e-02,  2.15062e-02,  2.10534e-02,
    2.06193e-02,  2.02027e-02,  1.98026e-02,  1.94181e-02,  1.90482e-02,  1.86921e-02,
    1.83491e-02,  1.80185e-02,  1.76996e-02,  1.73917e-02,  1.70944e-02,  1.68071e-02,
    1.65293e-02,  1.62605e-02,  1.60003e-02,  1.57484e-02,  1.55042e-02,  1.52675e-02,
    1.50379e-02,  1.48151e-02,  1.45988e-02,  1.43887e-02,  1.41846e-02,  1.39862e-02,
    1.37933e-02,  1.36057e-02,  1.34230e-02,  1.32452e-02,  1.30721e-02,  1.29034e-02,
    1.27390e-02,  1.25788e-02,  1.24225e-02,  1.22701e-02,  1.21214e-02,  1.19762e-02,
    1.18345e-02,  1.16960e-02,  1.15608e-02,  1.14287e-02,  1.12996e-02,  1.11733e-02,
    1.10498e-02,  1.09291e-02,  1.08109e-02,  1.06953e-02,  1.05821e-02,  1.04713e-02,
    1.03628e-02,  1.02565e-02,  1.01524e-02,  1.00503e-02,  9.95033e-03,  9.85230e-03,
    9.75617e-03,  9.66191e-03,  9.56945e-03,  9.47874e-03,  9.38974e-03,  9.30239e-03,
    9.21666e-03,  9.13248e-03,  9.04984e-03,  8.96867e-03,  8.88895e-03,  8.81063e-03,
    8.73368e-03,  8.65806e-03,  8.58374e-03,  8.51069e-03,  8.43887e-03,  8.36825e-03,
    8.29880e-03,  8.23050e-03,  8.16331e-03,  8.09721e-03,  8.03217e-03,  7.96817e-03,
    7.90518e-03,  7.84318e-03
};

double mfpsToCollision( double r )
{
   ASSERT( 0 <= r );
   ASSERT( r <= 1.);
   ASSERT( LN_XS_SIZE == 128);  // check LN_XS_SIZE == pow(2.,7);

   double f = std::ldexp(r, 7);  // shift mantissa (assuming LN_XS_SIZE == 128!)
   unsigned int i = static_cast<unsigned int>(f);
   if (i > 0)
      return -(LN_XS_ARRAY[i] + (f-i)*D_LN_XS_ARRAY[i]);
   return -std::log(r);
}

}    //    end of IMC_namespace
